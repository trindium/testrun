from flask import Flask, request, jsonify
from kafka import KafkaProducer
from kafka.errors import KafkaError
import json
from datetime import datetime

import logging
logging.basicConfig(level=logging.DEBUG)

app = Flask(__name__)
app.config["DEBUG"] = True



@app.route('/', methods=['POST'])
def home():
    #data = request.json
    #data.update({'timestamp' : str(datetime.now())})

    #producer = KafkaProducer(bootstrap_servers=['broker:29092'])
    #producer = KafkaProducer(value_serializer=lambda m: json.dumps(m).encode('ascii'))
    #producer.send('jsontopic', data,partition=1)

    producer = KafkaProducer(bootstrap_servers=['broker:29092'])

# Asynchronous by default
    future = producer.send('testtopic', b'raw_bytes')

# Block for 'synchronous' sends
    try:
        record_metadata = future.get(timeout=10)
    except KafkaError:
        # Decide what to do if produce request failed...
        log.exception()
        pass

    # Successful result returns assigned partition and offset
    print (record_metadata.topic)
    print (record_metadata.partition)
    print (record_metadata.offset)

    return jsonify(data)



app.run(host="localhost", port=8000)
